From a939b077d32a47ef613753c92aa33e523a7826fe Mon Sep 17 00:00:00 2001
From: Alec Leamas <leamas.alec@nowhere.nt>
Date: Sat, 13 Mar 2021 10:05:54 +0100
Subject: [PATCH 3/5] Add a OCPN_TARGET cmake parameter.

---
 cmake/GetArch.cmake     | 73 ++++++++++-------------------------------
 cmake/TargetSetup.cmake | 10 ++++--
 2 files changed, 25 insertions(+), 58 deletions(-)

diff --git a/cmake/GetArch.cmake b/cmake/GetArch.cmake
index 6c722a235..dddd9c6e9 100644
--- a/cmake/GetArch.cmake
+++ b/cmake/GetArch.cmake
@@ -10,7 +10,13 @@
 
 # Based on code from nohal
 function(GetArch)
-    if (NOT WIN32)
+  if (NOT "${OCPN_TARGET}" STREQUAL "")
+    string(REPLACE ":" ";" _target ${OCPN_TARGET})
+    list(GET ${_target} 0 ARCH)
+  elseif (WIN32)
+    # On WIN32 probably CMAKE_SIZEOF_VOID_P EQUAL 8, but we don't use it at all now...
+    set (ARCH "i386")
+  else ()
     # default
     set (ARCH "i386")
     set (LIB_INSTALL_DIR "lib")
@@ -32,62 +38,19 @@ function(GetArch)
         endif ()
       endif (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
       set(TENTATIVE_PREFIX "/usr/local")
-    endif (EXISTS /etc/debian_version)
-    if (EXISTS /etc/redhat-release)
-      set (PACKAGE_FORMAT "TBZ2")
-      if (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
-        if (CMAKE_SIZEOF_VOID_P MATCHES "8")
-          set (ARCH "aarch64")
-        else ()
-          set (ARCH "armhf")
-        endif ()
-      else (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
-        if (CMAKE_SIZEOF_VOID_P MATCHES "8")
-          set (ARCH "x86_64")
-          set (LIB_INSTALL_DIR "lib64")
-        else ()
-          set (ARCH "i386")
-          set (LIB_INSTALL_DIR "lib")
-        endif ()
-      endif (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
-    endif (EXISTS /etc/redhat-release)
-    if (EXISTS /etc/suse-release OR EXISTS /etc/SuSE-release)
-      set (PACKAGE_FORMAT "TBZ2")
-      if (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
-        if (CMAKE_SIZEOF_VOID_P MATCHES "8")
-          set (ARCH "aarch64")
-        else ()
-          set (ARCH "armhf")
-        endif ()
-      else (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
-        if (cMAKE_SIZEOF_VOID_P MATCHES "8")
-          set (ARCH "x86_64")
-          set (LIB_INSTALL_DIR "lib")
-          # In recent openSUSE versions (as of 2016), lib64 is mostly 
-          # used when there are both 32-bit and 64-bit versions, although 
-          # not limited to that. This CMake variable only affects the location
-          # of OpenCPN plugins at installation time, and nothing more than that.
-          # At run time, the plugin directory is determined by 
-          # wxStandardPaths::GetPluginsDir(), which returns "lib", so this can 
-          # be considered canonical.
-        else ()
-          set (ARCH "i386")
-          set (LIB_INSTALL_DIR "lib")
-        endif ()
-      endif (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
-    endif (EXISTS /etc/suse-release OR EXISTS /etc/SuSE-release)
-    if (EXISTS /etc/gentoo-release)
+    elseif (EXISTS /etc/redhat-release)
+      set (LIB_INSTALL_DIR "lib64")
+      if (ARCH STREQUAL "arm64")
+        set (ARCH "aarch64")
+      endif ()
+    elseif (EXISTS /etc/suse-release OR EXISTS /etc/SuSE-release)
+      if (ARCH STREQUAL "arm64")
+         set (ARCH "aarch64")
+      endif ()
+    elseif (EXISTS /etc/gentoo-release)
       set (LIB_INSTALL_DIR "lib${LIB_SUFFIX}")
     endif ()
-    if (APPLE)
-      if (CMAKE_SIZEOF_VOID_P MATCHES "8")
-        set(ARCH "x86_64")
-      endif ()
-    endif (APPLE)
-  else (NOT WIN32)
-    # On WIN32 probably CMAKE_SIZEOF_VOID_P EQUAL 8, but we don't use it at all now...
-    set (ARCH "i386")
-  endif (NOT WIN32)
+  endif ()
   set (LIB_INSTALL_DIR ${LIB_INSTALL_DIR} PARENT_SCOPE)
   set (ARCH ${ARCH} PARENT_SCOPE)
   set (PACKAGE_FORMAT ${PACKAGE_FORMAT} PARENT_SCOPE)
diff --git a/cmake/TargetSetup.cmake b/cmake/TargetSetup.cmake
index e83466c9f..3f2e223f2 100644
--- a/cmake/TargetSetup.cmake
+++ b/cmake/TargetSetup.cmake
@@ -1,8 +1,12 @@
 #
-# Export variables used in plugin setup: PKG_TARGET, PKG_TARGET_VERSION
-# and PKG_NVR
+# Export variables used in plugin setup: PKG_TARGET, PKG_TARGET_VERSION.
 
-if (OCPN_FLATPAK)
+if (NOT "${OCPN_TARGET}" STREQUAL "")
+    string(REPLACE ":" ";" _target ${OCPN_TARGET})
+    list(GET ${_target} 0 PKG_BUILD_TARGET)
+    list(GET ${_target} 1 PKG_TARGET_VERSION)
+    set(PKG_TARGET "${PKG_BUILD_TARGET}")
+elseif (OCPN_FLATPAK)
     set(PKG_TARGET "flatpak")
     set(manifest_path "${PROJECT_SOURCE_DIR}/flatpak/org.opencpn.OpenCPN.yaml")
     file(READ ${manifest_path} manifest)
-- 
2.29.2

